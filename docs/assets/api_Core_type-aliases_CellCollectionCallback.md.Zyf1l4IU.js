import{_ as e,c as l,o as a,a1 as o}from"./chunks/framework.Cj11lQu5.js";const _=JSON.parse('{"title":"Type alias: CellCollectionCallback()","description":"","frontmatter":{},"headers":[],"relativePath":"api/Core/type-aliases/CellCollectionCallback.md","filePath":"api/Core/type-aliases/CellCollectionCallback.md"}'),c={name:"api/Core/type-aliases/CellCollectionCallback.md"},t=o('<p><a href="./../../modules.html">cell-collection</a> / <a href="./../">Core</a> / CellCollectionCallback</p><h1 id="type-alias-cellcollectioncallback" tabindex="-1">Type alias: CellCollectionCallback() <a class="header-anchor" href="#type-alias-cellcollectioncallback" aria-label="Permalink to &quot;Type alias: CellCollectionCallback()&quot;">​</a></h1><blockquote><p><strong>CellCollectionCallback</strong>: (<code>cell</code>, <code>index</code>, <code>collection</code>) =&gt; <code>any</code></p></blockquote><p>An user callback passed to collection loop methods (e.g. <code>every</code>, <code>some</code>, ...).</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>cell</strong>: <a href="./../classes/AbstractCell.html"><code>AbstractCell</code></a></p><p>• <strong>index</strong>: <code>number</code></p><p>• <strong>collection</strong>: <a href="./../classes/AbstractCellCollection.html"><code>AbstractCellCollection</code></a></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>any</code></p><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/benoitlahoz/cell-collection/blob/0946bc3b2fdc5f73e1e8cc4664c5e944d8bb875a/src/abstract/cell-collection.abstract.ts#L17" target="_blank" rel="noreferrer">abstract/cell-collection.abstract.ts:17</a></p>',12),r=[t];function s(n,i,d,p,b,C){return a(),l("div",null,r)}const u=e(c,[["render",s]]);export{_ as __pageData,u as default};
